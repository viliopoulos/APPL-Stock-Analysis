# print all the outputs in a cell
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"

import pandas as pd
import numpy as np
data = pd.read_csv('AAPL.csv',index_col=0, parse_dates=True)
stock_o = data['Open']
stock_c = data['Close']
stock_h = data['High']
stock_l = data['Low'] 
stock_v = data['Volume']

data.head()
data.tail()
len(data)
len(stock_o)
data.Close.count()
# this is the code to figure out how many NaN in my data
data.Close.isna().sum()
#There is one day with NaN value
data.Close[data.Close.isna()]
### What's the open price at 2020-08-28?
stock_o['2020-08-28']
### What's the average closing price in 2018 first quarter (2018-01-01 to 2018-03-31)?
stock_c['2018-01-01':'2018-03-31'].mean()
### Based on day high and day low, find the top 5 dates with the biggest value change within 1 trading day. Sort them based on value change, highest on top.
(stock_h - stock_l).sort_values(ascending=False).head(5)
### Plot the closing price vs date graph.
%pylab inline
stock_c.plot()
### Plot the closing price vs date graph from the beginning of 2020 till most recent date. Do not use hard-coded date for the most recent date.
#%pylab inline
stock_c['2020-01-01':].plot()
stock_c.loc['2020-01-01':].plot()
### Total how many trading days the stock price close at above 50 dollars?
len(stock_c[stock_c > 50])
### When is the first time this stock close at more than 50 dollars? Show the date only.
stock_c[stock_c > 50].head(1).index[0]
### Within the dates with price close at more than 50 dollars, find out how many days the trading volume is higher than 100 million shares(100,000,000).
stock_over_50 = stock_c[stock_c > 50]
len(stock_over_50[stock_v[stock_over_50.index] > 100000000])
Or ..
(stock_v[stock_over_50.index] > 100000000).sum()
### For dates with price close at more than 45 dollars, how many days are before 2018-05-10 ? Show the date and stock price. 
stock_over_45 = stock_c[stock_c > 45]
stock_over_45[stock_over_45.index < '2018-05-10']
len(stock_over_45[stock_over_45.index < '2018-05-10'])
### Show the top 5 trading volume(date and volume) for stock closing price over 100 dollars.
stock_over_100 = stock_c[stock_c > 100]
stock_v[stock_over_100.index].nlargest(5)
### Based on top 5 trading volume dates for stock closing price over 100 dollars, find the matching closing price and sort them based on price, highest one on top.
trading_v_top5_index=stock_v[stock_over_100.index].nlargest(5).index
trading_v_top5_index
stock_c[trading_v_top5_index].sort_values(ascending=False)
### Based on top 5 trading volume dates for stock closing price over 100 dollars, which date it gains the most money per share? Assuming buy at open and sell at close.
stock_c[trading_v_top5_index]-stock_o[trading_v_top5_index]
(stock_c[trading_v_top5_index]-stock_o[trading_v_top5_index]).nlargest(1)
(stock_c[trading_v_top5_index]-stock_o[trading_v_top5_index]).idxmax()
